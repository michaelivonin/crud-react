{"version":3,"sources":["components/StorageOption/StorageOption.js","components/UserForm/UserForm.js","components/UserTable/UserTable.js","App.js","serviceWorker.js","index.js"],"names":["StorageOption","props","handleClick","bind","e","this","onClick","target","className","React","Component","UserForm","handleSubmit","preventDefault","isCreating","isReading","userUpdating","onCreateSubmit","onReadSubmit","onUpdateSubmit","name","onSubmit","type","required","UserTable","handleUpdateClick","handleDeleteClick","onUpdateClick","id","onDeleteClick","user","App","hideMessage","localStorageGetUsers","localStorageSetUsers","handleStorageOptionClick","handleButtonCreateClick","handleUserFormCreateSubmit","handleButtonReadClick","handleUserFormReadSubmit","handleUserTableUpdateClick","handleUserFormUpdateSubmit","handleUserTableDeleteClick","state","isLocalStorage","users","isSuccessfully","userFound","userIsNotFound","setTimeout","setState","localStorage","JSON","stringify","parse","data","tagName","storage","textContent","push","Date","now","toString","Math","random","substr","value","find","window","confirm","filter","data-mui-toggle","href","length","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.abf4e2d6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./StorageOption.sass\";\r\n\r\nclass StorageOption extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick(e) {\r\n    this.props.onClick(e.target);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"storage-option mui--text-center\">\r\n        <br/>\r\n        <br/>\r\n        <div className=\"mui--text-display2\">Choose storage</div>\r\n        <br/>\r\n        <br/>\r\n        <div onClick={this.handleClick}>\r\n          <button className=\"mui-btn mui-btn--raised storage-option__button\">Memory</button>\r\n          <button className=\"mui-btn mui-btn--raised storage-option__button\">Local Storage</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StorageOption;","import React from \"react\";\r\nimport \"./UserForm.sass\";\r\n\r\nclass UserForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    const {isCreating, isReading, userUpdating} = this.props;\r\n\r\n    if (isCreating) this.props.onCreateSubmit(e.target);\r\n    if (isReading) this.props.onReadSubmit(e.target);\r\n    if (userUpdating) this.props.onUpdateSubmit(e.target);\r\n  }\r\n\r\n  render () {\r\n    const {isCreating, isReading, userUpdating} = this.props;\r\n\r\n    return (\r\n      <div className=\"user-form\">\r\n        <br/>\r\n        <br/>\r\n        <div className=\"mui--text-display1\">\r\n          {(isCreating && \"Create new user\") ||\r\n            (isReading && \"Read user\") ||\r\n            (userUpdating && `Update user \"${userUpdating.name}\"`)\r\n          }\r\n        </div>\r\n        <br/>\r\n        <br/>\r\n        <form className=\"mui-form\" onSubmit={this.handleSubmit}>\r\n          <div className=\"mui-textfield mui-textfield--float-label\">\r\n            <input type=\"text\" name=\"name\" required={true}/>\r\n            <label>{(userUpdating && \"New name\") || \"Name\"}</label>\r\n          </div>\r\n          <button type=\"submit\" className=\"mui-btn mui-btn--raised user-form__button\">\r\n            {(isCreating && \"Create\") || (isReading && \"Read\") || (userUpdating && \"Update\")}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserForm;","import React from \"react\";\r\nimport \"./UserTable.sass\";\r\n\r\nclass UserTable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleUpdateClick = this.handleUpdateClick.bind(this);\r\n    this.handleDeleteClick = this.handleDeleteClick.bind(this);\r\n  }\r\n\r\n  handleUpdateClick() {\r\n    this.props.onUpdateClick();\r\n  }\r\n\r\n  handleDeleteClick(id) {\r\n    this.props.onDeleteClick(id);\r\n  }\r\n\r\n  render() {\r\n    const user = this.props.user;\r\n\r\n    return (\r\n      <div className=\"user-table\">\r\n        <br/>\r\n        <br/>\r\n        <div className=\"mui--text-display1 mui--text-center\">User table</div>\r\n        <br/>\r\n        <br/>\r\n        <table className=\"mui-table mui-table--bordered\">\r\n          <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Name</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>{user.id}</td>\r\n              <td>{user.name}</td>\r\n              <td>\r\n                <button\r\n                  className=\"mui-btn mui-btn--small mui-btn--primary mui-btn--fab\"\r\n                  onClick={this.handleUpdateClick}\r\n                >\r\n                  &#9998;\r\n                </button>\r\n                <button\r\n                  className=\"mui-btn mui-btn--small mui-btn--danger mui-btn--fab\"\r\n                  onClick={() => this.handleDeleteClick(user.id)}\r\n                >\r\n                  &#10006;\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserTable;","import React from \"react\";\nimport StorageOption from \"./components/StorageOption/StorageOption\";\nimport UserForm from \"./components/UserForm/UserForm\";\nimport UserTable from \"./components/UserTable/UserTable\";\nimport './App.sass';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.hideMessage = this.hideMessage.bind(this);\n    this.localStorageGetUsers = this.localStorageGetUsers.bind(this);\n    this.localStorageSetUsers = this.localStorageSetUsers.bind(this);\n    this.handleStorageOptionClick = this.handleStorageOptionClick.bind(this);\n    this.handleButtonCreateClick = this.handleButtonCreateClick.bind(this);\n    this.handleUserFormCreateSubmit = this.handleUserFormCreateSubmit.bind(this);\n    this.handleButtonReadClick = this.handleButtonReadClick.bind(this);\n    this.handleUserFormReadSubmit = this.handleUserFormReadSubmit.bind(this);\n    this.handleUserTableUpdateClick = this.handleUserTableUpdateClick.bind(this);\n    this.handleUserFormUpdateSubmit = this.handleUserFormUpdateSubmit.bind(this);\n    this.handleUserTableDeleteClick = this.handleUserTableDeleteClick.bind(this);\n    this.state = {\n      isLocalStorage: false,\n      users: null,\n      isSuccessfully: false,\n      isCreating: false,\n      isReading: false,\n      userFound: null,\n      userIsNotFound: false,\n      userUpdating: null,\n    };\n  }\n\n  hideMessage() {\n    setTimeout(() => this.setState({\n      isSuccessfully: false,\n      userIsNotFound: false,\n    }), 3800);\n  }\n\n  localStorageGetUsers() {\n    this.setState({isLocalStorage: true});\n    if (!localStorage.users) localStorage.users = JSON.stringify([]);\n    return JSON.parse(localStorage.users);\n  }\n\n  localStorageSetUsers(data) {\n    localStorage.users = JSON.stringify(data);\n  }\n\n  handleStorageOptionClick(target) {\n    if (target.tagName !== \"BUTTON\") return;\n\n    const storage = (target.textContent === \"Memory\") ? [] :\n      (target.textContent === \"Local Storage\") ? this.localStorageGetUsers() : null;\n\n    setTimeout(() => this.setState({\n      users: storage,\n      isSuccessfully: true,\n    }), 200);\n\n    this.hideMessage();\n  }\n\n  handleButtonCreateClick(e) {\n    e.preventDefault();\n    this.setState({\n      isCreating: true,\n      isReading: false,\n      userFound: null,\n      userUpdating: null,\n    });\n  }\n\n  handleUserFormCreateSubmit(target) {\n    const {isLocalStorage, users} = this.state;\n\n    users.push({\n      id: Date.now().toString(36) + Math.random().toString(36).substr(2),\n      name: target.name.value,\n    });\n\n    setTimeout(() => this.setState({\n      users: users,\n      isCreating: false,\n      isSuccessfully: true,\n    }), 200);\n\n    this.hideMessage();\n    if (isLocalStorage) this.localStorageSetUsers(users);\n  }\n\n  handleButtonReadClick(e) {\n    e.preventDefault();\n    this.setState({\n      isReading: true,\n      isCreating: false,\n      userFound: null,\n      userUpdating: null,\n    });\n  }\n\n  handleUserFormReadSubmit(target) {\n    const user = this.state.users.find(user => user.name === target.name.value);\n\n    if (!user) {\n      this.setState({userIsNotFound: true});\n      this.hideMessage();\n      return;\n    }\n\n    setTimeout(() => this.setState({\n      userFound: user,\n      isReading: false,\n    }), 200);\n  }\n\n  handleUserTableUpdateClick() {\n    setTimeout(() => this.setState({\n      userUpdating: this.state.userFound,\n      userFound: null,\n    }), 200);\n  }\n\n  handleUserFormUpdateSubmit(target) {\n    const {isLocalStorage, users, userUpdating} = this.state;\n\n    if (userUpdating.name === target.name.value) {\n      target.name.value = \"Type new name\";\n      return;\n    }\n\n    users.find(user => user.id === userUpdating.id).name = target.name.value;\n\n    setTimeout(() => this.setState({\n      users: users,\n      isSuccessfully: true,\n      userUpdating: null,\n    }), 200);\n\n    this.hideMessage();\n    if (isLocalStorage) this.localStorageSetUsers(users);\n  }\n\n  handleUserTableDeleteClick(id) {\n    const accept = window.confirm(\"Are you sure you want to delete this user?\");\n    if (!accept) return;\n\n    const users = this.state.users.filter(user => user.id !== id);\n    setTimeout(() => this.setState({\n      users: users,\n      userFound: null,\n      isSuccessfully: true,\n    }), 200);\n\n    this.hideMessage();\n    if (this.state.isLocalStorage) this.localStorageSetUsers(users);\n  }\n\n  render() {\n    const {users, isSuccessfully, isCreating, isReading, userFound, userIsNotFound, userUpdating} = this.state;\n\n    return (\n      <div className=\"app-wrapper\">\n        <header className=\"mui-appbar mui--z1 header\">\n          <div className=\"mui-container\">\n            <table className=\"header__table\">\n              <tbody>\n              <tr className=\"mui--appbar-height\">\n                <td className=\"mui--text-title\">CRUD App</td>\n                <td className=\"mui--text-right\">\n                  {users &&\n                    <div className=\"mui-dropdown\">\n                      <button className=\"mui-btn mui-btn--primary header__button\" data-mui-toggle=\"dropdown\">\n                        User\n                        <span className=\"mui-caret\"></span>\n                      </button>\n                      <ul className=\"mui-dropdown__menu header__list\">\n                        <li>\n                          <a href=\"/\" onClick={this.handleButtonCreateClick}>\n                            Create\n                          </a>\n                        </li>\n                        {(users && users.length > 0) &&\n                          <li>\n                            <a href=\"/\" onClick={this.handleButtonReadClick}>\n                              Read\n                            </a>\n                          </li>\n                        }\n                      </ul>\n                    </div>\n                  }\n                </td>\n              </tr>\n              </tbody>\n            </table>\n          </div>\n        </header>\n        <div className=\"content-wrapper\">\n          <div className=\"mui--appbar-height\"></div>\n          {!users &&\n            <StorageOption onClick={this.handleStorageOptionClick} />\n          }\n          {isCreating &&\n            <UserForm\n              isCreating={isCreating}\n              onCreateSubmit={this.handleUserFormCreateSubmit}\n            />\n          }\n          {isReading &&\n            <UserForm\n              isReading={isReading}\n              onReadSubmit={this.handleUserFormReadSubmit}\n            />\n          }\n          {userFound &&\n            <UserTable\n              user={userFound}\n              onUpdateClick={this.handleUserTableUpdateClick}\n              onDeleteClick={this.handleUserTableDeleteClick}\n            />\n          }\n          {userUpdating &&\n            <UserForm\n              userUpdating={userUpdating}\n              onUpdateSubmit={this.handleUserFormUpdateSubmit}\n            />\n          }\n          <p\n            className={isSuccessfully ? \"mui--z2 alert alert_success\" :\n              userIsNotFound ? \"mui--z2 alert alert_failure\" : \"mui--z2 alert\"\n            }\n          >\n            {(isSuccessfully && \"Successfully\") || (userIsNotFound && \"Not found\")}\n          </p>\n        </div>\n        <footer className=\"footer\">\n          <div className=\"mui-container mui--text-center\">\n            Made by Mike Ivonin\n          </div>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();"],"sourceRoot":""}